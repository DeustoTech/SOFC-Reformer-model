function [y1] = check_convex_hull(x1)
%CHECK_CONVEX_HULL neural network simulation function.
%
% Auto-generated by MATLAB, 25-Feb-2022 17:55:03.
% 
% [y1] = check_convex_hull(x1) takes these arguments:
%   x = 7xQ matrix, input #1
% and returns:
%   y = 1xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [650.017810034429;2.54103072375779e-06;0.0413066504833892;0.00053703958555753;0.0180183308362189;0.00256250657575826;0.000504496961841226];
x1_step1.gain = [0.00810394199048688;15.661317953303;2.66823007261471;5.9093089018053;17.0867577412738;5.23210453027247;2.72189454636156];
x1_step1.ymin = -1;

% Layer 1
b1 = [-1.2868949907378282038;0.75020905504387036533;0.53888141577684078865;-0.043539296335372172642;0.35729961100521762107;1.4583959443825700308;-0.76206224038444436708;-1.5544335132775861652;2.2175837550787274033;0.87750263209780432483];
IW1_1 = [0.21650886164465266148 -0.059482257554884190864 -0.96779436600345580821 0.16390172391873505942 -0.010794812208672359757 0.68600445064285686669 -0.027463324849583845011;-0.01366909820061844652 0.011933909556239069918 -0.21971307014727239904 -0.24916897432831602854 0.10297190010042502062 0.066810406512452222283 -0.062715580136818924184;0.049877994761290296577 0.034730285941144821427 -0.44331397093543611909 0.27694623413953878277 -0.010426026502856768075 0.31946123904862150367 -0.93166436530495821966;-0.023662231753244326871 -0.0058263593351530794731 0.50608469091950492036 0.0022823655471751421765 0.032434910896605717578 0.01041613746937150066 -0.71378821505494527422;1.6303332125245049156 -0.079532940399661508635 -1.1915579653618679767 0.4188211099242525326 -0.038459861140958638559 0.46088037205749776692 -0.034781377768249500948;0.090588470467265216901 -0.040117506046564069266 0.86204148586737305848 -0.13098275261689565352 0.015158658147145074105 -0.2533933335143788157 0.17072224219235379583;0.0073354240418971455862 -0.087761714976309343483 -0.19507343524578990568 0.030236511686179575603 0.025762843109765082988 -0.18036924385608577026 -0.15929719324353255883;-1.0266252915390967626 0.01610666997113128357 0.33133838695413447839 -0.081298217397395969308 0.013536975586285750553 -0.12777953183830317863 -0.17562247169589523255;0.99505454234891810295 -0.14320253658209652903 0.3033704443931892758 0.52941887090726391651 -0.042718799585070202363 0.201418683348493055 -0.54568658851023232881;0.026730623289210955762 0.029980117346083873936 -0.91555990744540993731 0.26810671768064259224 -0.0079006140854246502403 0.43409295804173697597 -0.78099409203741210206];

% Layer 2
b2 = [1.432552891839587339;-2.3174217429856009964;-1.2889925040048657578;-0.73011904149655382223;-0.61721944383220073149;-0.12560080349411575917;0.17243255196789078476;-0.75477759380318543148;0.75357318971706699351;-1.4789552343050116345];
IW2_1 = [-0.31494335599805595161 0.45840577430836892958 -0.7896606719603872504 -0.41142176484526704616 0.27943286196386651898 -0.48357891550747666987 -0.040508882297872257638;0.097107319438717754068 0.028724549876093772444 -0.83349927603216500405 0.047952535461197536015 -0.0053672343624478176596 0.24545532228971717048 -0.12571734137821299893;-0.00043759854737178806652 -0.0046463247173625116943 0.2800379332087782891 -0.029323514584548987516 -0.014875372945628186419 -0.17259186370156856527 0.1645440633055202384;-0.026463125200058904007 0.19902298158258199812 -0.032004457181895158702 -0.64878989288852983996 0.18581201493323437623 -0.312018900787688791 0.21488823678860785593;-0.083039266298161870661 -0.013536162002831813797 0.095695546772475229003 -0.0012920599868442082629 -0.023378268951003589038 -0.097091504998782329761 -1.2557459524327332367;-0.12040774937314996373 0.064202807762246849599 0.23892157990427145831 -0.56983669062803143923 0.057199015024809486685 -0.090690290901182440964 0.61935146321600142993;-0.0040927698715646212632 -0.022320676020185427346 -0.15479650197976649317 -0.34928318920353335075 -0.10239333706232779664 0.026679348458346876377 0.61500117725616987308;-0.1934903379376041177 -0.026451965739030802727 0.42280228303401368173 -0.021427612430539130783 0.057488918400511512807 0.2576963818806905504 -0.78496559597517301388;0.27301109384075866737 0.052866146365284735764 0.11363580183873836504 -0.27761597294887069287 0.055105224737327318518 -0.053617979502728410623 -0.18531147578753681682;0.011059173643570313628 0.11550930405871757956 -0.22993309297328562435 -0.053355233478424177185 -0.016256277261403360296 -0.42513166080832587301 0.25797264600957259262];
LW2_1 = [-0.24271668847343258468 0.20397047901554735128 0.54040022161300826919 0.19723658381510630888 0.14903980021658611022 0.2422585083422119645 -0.49236511575122116069 0.097432117671649401403 -0.50232651429073882365 -0.30543666793272200577;-0.4152437614972049329 -0.27705156299028399491 0.05413646707122592161 0.22732480418957098922 -0.14483488518822709712 -0.25631074959746846798 0.17129835345615110342 -0.21755581779003718701 0.17403586082993841022 1.0128471534836789303;0.40241370216677152527 0.34633814765459342011 0.10717851547451522076 0.11364481885056185173 0.18726806981202043234 -0.081697528153538770401 -0.27292047180737860623 0.083496695343190860394 0.098628355046898041891 -0.037199383986196148111;-0.29700991905514140257 -0.11545896509511079098 -0.21857826914597408563 -0.22241334568695816931 -0.36989547784962867327 -0.015742562838942892461 0.030181344160655543263 -0.17596269935608635504 -0.57276657493187721482 0.55390006511742839734;0.033722413934259745649 0.20572239392145630354 -0.16555391424806462086 -1.2367256569631075447 -0.053253401321318130646 0.64955689738922772758 -0.8069025130838807236 -0.51721919899915125285 -0.16263520351902122085 -0.0077924831434640316752;-0.95806997129103932398 -0.30781131439758924184 -0.24684958786993374535 0.38188337279651418665 -0.33085138256545226776 0.3318206462087124331 -0.27793047361530504036 -0.0091401242296653001373 -0.16488589527023145287 -0.30652098740304828395;-0.0018599610289491677519 -0.033039749071667040559 -0.029362198512855784693 0.86166491611510653836 0.058819608081883890949 -0.42069101439870631998 0.54431929974999504473 0.52012787223097001199 0.17873779406759013333 0.20924288908917976215;0.38179526622367859767 -0.34180695819348450026 -0.014980706891080053378 -0.93868176717345186422 0.044626486178821575534 0.94691643142064441108 -0.050378800552925546985 0.64731675813148603638 0.10056714184191448136 -0.42846086080685402697;0.70132373672076686599 -0.37546249388836461236 0.22970917696695622445 0.11798132049407852873 0.29322157665645909308 -0.636172651239005571 -0.33266324832068727702 -1.0561898227653425675 0.32628585925374875565 0.23372708192476135403;-0.89867714479611005007 -0.26921253182460425091 0.0018104819612875782536 0.62093639197220029669 0.096392771280882236229 0.48830871261997316202 0.30449372004662611513 0.36690520864939407675 -0.060815709594004833949 0.012213664881167225068];

% Layer 3
b3 = 2.5642977147168588559;
IW3_1 = [-0.049668930439167792434 0.13857501891937501481 1.6411866908401739895 0.048300680403948637043 0.10056793486402830495 -0.001774957657936605121 -0.90228853304802125734];
LW3_1 = [0.44408574270018763563 -0.50925443880115428552 -0.26387657685459287027 -2.1742477665155295341 0.11692834694209475188 0.85468202403854909299 1.260571132766060698 -1.6989787297038185798 -0.34903110650115864999 0.71879250331978816746];
LW3_2 = [-0.02505356476362962867 2.813255920844686564 -3.4284445057239083532 0.065675960764987606488 -2.1245678576563995499 0.08248665777830582746 1.8066601263252723975 1.5622390167883868362 -0.17843630473032384698 0.93181469920732218348];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = 4.34850908310961;
y1_step1.xoffset = 0.000458781828156329;

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = tansig_apply(repmat(b2,1,Q) + IW2_1*xp1 + LW2_1*a1);

% Layer 3
a3 = repmat(b3,1,Q) + IW3_1*xp1 + LW3_1*a1 + LW3_2*a2;

% Output 1
y1 = mapminmax_reverse(a3,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
