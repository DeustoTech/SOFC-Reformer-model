function [y1] = proyection_in_convex_hull(x1)
%PROYECTION_IN_CONVEX_HULL neural network simulation function.
%
% Auto-generated by MATLAB, 11-Apr-2022 14:36:07.
% 
% [y1] = proyection_in_convex_hull(x1) takes these arguments:
%   x = 7xQ matrix, input #1
% and returns:
%   y = 6xQ matrix, output #1
% where Q is the number of samples.

%#ok<*RPMT0>

% ===== NEURAL NETWORK CONSTANTS =====

% Input 1
x1_step1.xoffset = [650.017810034429;4.46327879189371e-05;0.0405878683767473;0.000637144675542274;0.0179931380855668;0.00238257010629686;0.000473989100173467];
x1_step1.gain = [0.00810394199048688;15.6695550815162;2.66561002988584;5.91459046206695;17.0621306877397;5.23217286952862;2.72397253039577];
x1_step1.ymin = -1;

% Layer 1
b1 = [-2.2472434879110800843;0.23225644215356458511;-1.3998778406970899812;-0.17109528320876268848;0.22131920369587582131;-0.3644887227386572337;-0.47566064504200256113;1.8529416782790670837;-1.7809839840145484935;-2.2464466839236725271];
IW1_1 = [0.54090313873997464267 0.059511648217273768746 -0.44026672406451189401 0.19831388987307135841 -0.0020945656610227348683 0.35996134482067954075 0.53383260552272204791;0.07286414753562883706 0.0085061785620914390216 -0.78103203058865167119 0.2085934225871402814 0.014809411438286807644 0.11810635092136741175 0.51763415253698219498;0.52885126900158663243 -0.040012987105414038469 -1.6970049971451039994 0.21560971462300693169 -0.020128246071311781812 1.1409185617512724864 -0.7727136025799528074;-0.95773294036919975891 0.063255034636342216681 1.9703207812774508056 -0.89893693348847503177 0.054809853465408654716 -0.87183928581350100817 1.0062637395952627184;-0.2076338596820121174 0.047394461143743120413 -0.71309769339103579178 0.15089621801897590281 0.039968017572402869675 0.2143321971469127063 -0.93507196076265874929;-0.35229681431934029012 0.063747613640037850691 -0.79540801323398802047 -0.18406562850947694177 0.055707230220100364959 0.34173455176024380986 -0.56666894566160486146;-0.29964398241377532273 0.078322993907511753719 -0.41365746046155393856 -0.15778012962661683294 0.06626083353202495696 0.28816986812811468122 -0.68860563242606276368;0.85206881565592262895 -0.094899993894650966353 0.1515792212487054591 0.95844400465012324908 -0.11506473905699317328 0.22154746786200560371 -0.52685993514951057204;-2.1290235580201155585 0.13203197798850163647 0.9743457312695165129 -0.30618581058585847554 0.038191216255041932071 -0.28142071457195239059 -0.47923659775700860886;-2.1585317135211217199 0.038636144229119720461 1.225602261494760814 -0.2776752474288516348 0.024977098999509419336 -0.31167458001012210422 -0.23314108191807833559];

% Layer 2
b2 = [-0.12315960427931275933;-0.49586133455378222923;0.0069925082085402993221;-0.52915487906469382828;-0.016196883905445547125;-0.34150779315247170587];
IW2_1 = [0.16980335598404652786 -0.041326807765711272291 0.093806751961829804021 0.046592615294432128403 -0.026479020371980788867 0.022474529765086015409 0.011801408879264223273;0.076543708961783793465 0.011550801582105819573 0.10432114631229445767 0.047182831874744549094 0.021985851131047316059 0.045409312392555287174 -0.40482490113492253236;-0.33705444214047936002 -0.0035793101751946249101 0.022419833915380139866 -0.03364155832855625361 0.00083818536761734517386 0.021914608874035228225 -0.16053492961856100085;0.090165257839948137475 -0.0016601049006360066654 0.27136597168975007399 0.075724655766948201219 0.042231405561091200918 0.066538123611727853501 -0.55870977465617022162;-0.063909253961503084684 -0.00053886882271853009385 0.2154444773138938507 -0.015320806135257668962 -0.0085804317704252126842 -0.018783160406862453584 -0.13505494935316025851;0.069530789773682044608 -0.0087139844196145749972 -0.29973315492699470486 -0.055001831481114767108 -0.02230161512860171294 -0.06351103834113210056 0.70193636982646845368];
LW2_1 = [0.45211450269773673094 0.15148348349309104233 -0.1521068789859333914 0.2348026531328727684 0.28490350850320039777 0.29488101697308655158 -0.13202308254503114515 -0.084560001148593313958 0.63643304760168650791 -0.2067765622967368544;0.074615996772293718964 -0.3316356461596013383 -0.13306527553044089629 0.13548329378360118858 -0.21262665204836700417 0.18659635722083878218 -0.2929697213636740516 0.031903256065790863705 0.19356704302366045667 -0.52222254777566168293;0.099650827695354549096 0.18200590982273814888 0.080741793956177448921 -0.34687433986440718847 0.045080808160327029421 -0.14802246451222836332 0.19358341195863146278 0.31686491701705721269 -0.20189626764812784732 0.57858742230747084445;-0.27024769685202620906 -0.11777542283087427677 -0.12930879530315000925 0.10384097830301192156 0.00050372906175698934847 0.32251020220646964276 -0.32803579238678565178 -0.30100983475371395626 0.22315549508899854003 -0.41623496289260003556;-0.15745808906689087725 0.25240493863402208019 0.44003126722551905159 -0.22647485097498412654 0.23176545573172077641 -0.098770192407321946715 0.15378549881876019123 -0.034288112885804196417 -0.33010464435237357739 0.54795713489561503895;-0.26119521014924029778 0.12753343837186303933 -0.068093216914247051141 0.085858392922848553175 0.095247343765180444985 -0.30220551397264805438 0.31505730974048223869 -0.076386588300057331469 -0.080802479030163368301 0.091159550483444429236];

% Output 1
y1_step1.ymin = -1;
y1_step1.gain = [15.8468009495534;2.66444115787609;6.0330701436282;17.0552908005538;5.22890295933101;2.72008791805673];
y1_step1.xoffset = [1.01283162009754e-06;0.0404144247270471;0.000513290811494057;0.0179848989236803;0.00235429129614149;0.000111408405032994];

% ===== SIMULATION ========

% Dimensions
Q = size(x1,2); % samples

% Input 1
xp1 = mapminmax_apply(x1,x1_step1);

% Layer 1
a1 = tansig_apply(repmat(b1,1,Q) + IW1_1*xp1);

% Layer 2
a2 = repmat(b2,1,Q) + IW2_1*xp1 + LW2_1*a1;

% Output 1
y1 = mapminmax_reverse(a2,y1_step1);
end

% ===== MODULE FUNCTIONS ========

% Map Minimum and Maximum Input Processing Function
function y = mapminmax_apply(x,settings)
  y = bsxfun(@minus,x,settings.xoffset);
  y = bsxfun(@times,y,settings.gain);
  y = bsxfun(@plus,y,settings.ymin);
end

% Sigmoid Symmetric Transfer Function
function a = tansig_apply(n,~)
  a = 2 ./ (1 + exp(-2*n)) - 1;
end

% Map Minimum and Maximum Output Reverse-Processing Function
function x = mapminmax_reverse(y,settings)
  x = bsxfun(@minus,y,settings.ymin);
  x = bsxfun(@rdivide,x,settings.gain);
  x = bsxfun(@plus,x,settings.xoffset);
end
